buildscript {
	ext {
		spring_boot_version = '2.1.4.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
	}
}

apply plugin: "maven"
apply plugin: "eclipse"

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = java_version_compatibility
targetCompatibility = java_version_compatibility

// Repositories to work with
repositories {
	mavenLocal()
	mavenCentral()
	
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

configurations {
	compile.exclude module: 'spring-boot-starter-logging'
	compile.exclude module: 'spring-boot-starter-tomcat'
	compile.exclude module: 'spring-boot-starter-jetty'
	compile.exclude module: 'spring-security-web'
	compile.exclude module: 'spring-security-test'
	compile.exclude group: 'junit'
	compile.exclude group: 'org.apache.tomcat'
	compile.exclude module: 'spring-asm'
	compile.exclude group: 'asm'
	compile.exclude module: 'slf4j-log4j12'
	compile.exclude group: 'log4j'
	compile.exclude group: 'ch.qos.cal10n'
	compile.exclude group: 'ch.qos.logback'
	compile.exclude group: 'org.springframework.data'
	compile.exclude group: 'com.vaadin.external.google'
	compile.exclude module: 'android-json'
}

ext {
	reactor_bom_version = "Californium-SR6"
	reactor_addons_version = "3.2.2.RELEASE"
	
	commons_codec_version="1.11"
	commons_lang3_version="3.8.1"
	commons_io_version = "2.6"
	
	// Logging related
	slf4j_version = "1.7.26"
	log4j2_version = "2.11.1"
	lmax_disruptor_version = "3.4.2"
	
	// For unit testing
	testng_version = "6.14.2"
}

dependencyManagement {
	imports {
        mavenBom "io.projectreactor:reactor-bom:${reactor_bom_version}"
    }
}

dependencies {
	
	// Spring Boot
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "org.springframework.boot:spring-boot-starter-aop"
	compile "org.springframework.boot:spring-boot-starter-webflux"
	compile "org.springframework.boot:spring-boot-starter-log4j2"
	compile "org.springframework.boot:spring-boot-loader"

	// Utilities
	compile "io.projectreactor.addons:reactor-extra:${reactor_addons_version}"
	
	compile "commons-codec:commons-codec:${commons_codec_version}"
	compile "org.apache.commons:commons-lang3:${commons_lang3_version}"
	compile "commons-io:commons-io:${commons_io_version}"
	
	// Logging related
	compile "org.slf4j:slf4j-api:${slf4j_version}"
	compile "org.slf4j:slf4j-ext:${slf4j_version}"
	compile "org.slf4j:jcl-over-slf4j:${slf4j_version}"
	compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2_version}"
    compile "org.apache.logging.log4j:log4j-api:${log4j2_version}"
    compile "org.apache.logging.log4j:log4j-core:${log4j2_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j2_version}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2_version}"
    compile "com.lmax:disruptor:${lmax_disruptor_version}"

	// Unit tests
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "io.projectreactor:reactor-test"
	testCompile "org.springframework.security:spring-security-test"
	testCompile "org.testng:testng:${testng_version}"
}

def scriptsDirectory = "./scripts"

bootJar {
	launchScript {
		script = file("${scriptsDirectory}/launch.script")
	} 
	
	manifest {
		attributes 'Manifest-Version': '1.0',
			'Start-Class': 'com.demo.MyDemoApplication',
			'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher',
			'Jdk-Version': System.getProperty('java.version') + ' (' + System.getProperty("java.vm.vendor") + ')',
			'Implementation-Vendor': 'An Earthling',
			'Implementation-Title': 'Spring Boot 2 Webflux Executable JAR Demo'
	}
}